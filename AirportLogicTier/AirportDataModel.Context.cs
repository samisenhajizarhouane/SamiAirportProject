//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirportLogicTier
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_AirportEntities : DbContext
    {
        public db_AirportEntities()
            : base("name=db_AirportEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Airplane> tbl_Airplane { get; set; }
        public virtual DbSet<tbl_Airport> tbl_Airport { get; set; }
        public virtual DbSet<tbl_Booking> tbl_Booking { get; set; }
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_Company> tbl_Company { get; set; }
        public virtual DbSet<tbl_Crew> tbl_Crew { get; set; }
        public virtual DbSet<tbl_Flight> tbl_Flight { get; set; }
        public virtual DbSet<tbl_Route> tbl_Route { get; set; }
    
        public virtual int CreateBooking(string mail, string flightNumber)
        {
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBooking", mailParameter, flightNumberParameter);
        }
    
        public virtual int CreateFlight(string fromCity, string toCity, Nullable<System.DateTime> departureDate, Nullable<System.DateTime> arrivalDate, Nullable<bool> stopOver, string status, string company, Nullable<int> idRoute, string airplaneName)
        {
            var fromCityParameter = fromCity != null ?
                new ObjectParameter("FromCity", fromCity) :
                new ObjectParameter("FromCity", typeof(string));
    
            var toCityParameter = toCity != null ?
                new ObjectParameter("ToCity", toCity) :
                new ObjectParameter("ToCity", typeof(string));
    
            var departureDateParameter = departureDate.HasValue ?
                new ObjectParameter("DepartureDate", departureDate) :
                new ObjectParameter("DepartureDate", typeof(System.DateTime));
    
            var arrivalDateParameter = arrivalDate.HasValue ?
                new ObjectParameter("ArrivalDate", arrivalDate) :
                new ObjectParameter("ArrivalDate", typeof(System.DateTime));
    
            var stopOverParameter = stopOver.HasValue ?
                new ObjectParameter("StopOver", stopOver) :
                new ObjectParameter("StopOver", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var idRouteParameter = idRoute.HasValue ?
                new ObjectParameter("idRoute", idRoute) :
                new ObjectParameter("idRoute", typeof(int));
    
            var airplaneNameParameter = airplaneName != null ?
                new ObjectParameter("AirplaneName", airplaneName) :
                new ObjectParameter("AirplaneName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateFlight", fromCityParameter, toCityParameter, departureDateParameter, arrivalDateParameter, stopOverParameter, statusParameter, companyParameter, idRouteParameter, airplaneNameParameter);
        }
    }
}
